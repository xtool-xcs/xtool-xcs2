import{BaseViewModel as l,mCanvasManager as a,sensorsTrack as o,EventNames as h,xcsApp as u,AppType as C,useCanvasStore as i,isEmpty as p,useExtCenterStore as m,InsertType as f}from"./main-f7BGirYr.js";import"../assets/index-FfF0Lcw0.js";import{watch as r,nextTick as g}from"./importmap-vue-u6Q_1Jji.js";class I{}class E{constructor(t,e){this.file=t,this.options=e}}class c{constructor(t){this.id=t}}class S{constructor(){}}class y{constructor(t){this.id=t}}class x{constructor(t,e){this.id=t,this.name=e}}class D{constructor(t,e){this.oldIndex=t,this.newIndex=e}}class H extends l{constructor(){super()}createState(){return{currentId:"",hasCanvas:!1,htmlCanvas:void 0,cnvIdentities:[],importing:!1,onChangeCanvas:!1}}setEventHandler(){this.registerEventHandler(I,this.initCanvas),this.registerEventHandler(c,this.changeCanvas),this.registerEventHandler(y,this.delete),this.registerEventHandler(x,this.renameCanvas),this.registerEventHandler(E,this.importFile),this.registerEventHandler(S,this.addCanvas),this.registerEventHandler(D,this.sortCanvasEvent)}async delete(t){if(a.canvasDataList.length!==1){if(a.currentId===t.id){const e=a.canvasDataList.findIndex(v=>v.id===t.id),n=e===0?1:e-1,d=a.canvasDataList[n].id;await this.changeCanvas(new c(d))}a.canvasDataList=a.canvasDataList.filter(e=>e.id!==t.id),a.deleteCanvasId(t.id),o(h.canvasAction,{total:a.canvasDataList.length,type:"delete"})}}renameCanvas(t){a.canvasDataList=a.canvasDataList.map(e=>(e.id===t.id&&(e.title=t.name),e))}changeCanvas(t){this.updateState({onChangeCanvas:!0});const e=u.appType===C.Pad?0:500;setTimeout(async()=>{var n,d;a.clearCoverTimer(),await this.noticeCanvasId(a.currentId),(n=a.currentCanvas)==null||n.finishCurMode(),(d=a.currentCanvas)==null||d.setViewportToFit(),a.changeSingleCanvas(t.id),this.updateState({onChangeCanvas:!1})},e)}async initCanvas(){return await i().createCanvas(),"finish"}initWatch(){r([()=>m().ext,()=>i().canvasId],([t,e])=>{t&&(a.handlerDeviceChange(),this.updateShot()),p(e)||this.updateCanvas()}),r(()=>a.hasInitHtmlRef.value,(t,e)=>{e&&!t&&this.initFinish()}),r(()=>i().isEmpty,(t,e)=>{t||this.initFinish()},{immediate:!0}),r(()=>a.currentIdRef.value,t=>{this.updateState({currentId:t});const e=this.uiState.cnvIdentities.findLast(n=>n.id===t);e!=null&&e.img||setTimeout(()=>{this.noticeCanvasId(t,!0)},500)},{immediate:!0}),r(()=>a.cnvIdentitiesRef.value,t=>{this.updateState({cnvIdentities:t})},{immediate:!0})}async noticeCanvasId(t,e=!0){await a.noticeCanvasCover(t,e)}initFinish(){this.updateState({hasCanvas:!0}),a.resetEditorMode(),this.updateCanvas(),this.updateState({hasCanvas:!i().isEmpty}),this.sendEffect({initFinish:{value:!0}})}importFile(t){g(async()=>{var e;this.updateState({importing:!0}),await a.insertElement({type:f.File,file:t.file,options:t.options}),(e=a.currentCanvas)==null||e.clearSelected(),this.updateShot(),this.updateState({importing:!1})})}updateCanvas(){this.updateState({currentId:a.currentId}),i().isEmpty||this.updateShot()}updateShot(){a.currentCanvas&&a.getDisplayLayerShot().then(t=>{this.updateState({htmlCanvas:t})})}addCanvas(){const t=a.addCanvas();this.changeCanvas(new c(t)),a.addCanvasId(t),o(h.canvasAction,{total:a.canvasDataList.length,type:"add"})}sortCanvasEvent(t){t.oldIndex>=a.canvasDataList.length||t.newIndex>=a.canvasDataList.length||t.oldIndex!==t.newIndex&&a.sortCanvas(t.oldIndex,t.newIndex)}onDestroy(){var t;(t=a.currentCanvas)==null||t.clearSelected(),a.isMultiSelectMode=!1,super.onDestroy()}}export{S as AddCanvasEvent,c as ChangeCanvasDataEvent,y as DeleteCanvasEvent,E as EdSettingImportEvent,H as EdSettingViewModel,x as ReNameCanvasEvent,D as SortCanvasEvent};
